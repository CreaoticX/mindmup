<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <link href="<%=settings.public_url%>/mapjs.css" rel="stylesheet" />
    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1">
  </head>
  <body>
  <%= erb :embedded_scripts %>
		<div id="container"></div>

    <script>
  window.onload = function () {
      MM.layoutStaticCustomStyle = function (layout) {
        'use strict';
        var rootNodeId = layout && layout.rootNodeId,
          rootNode = rootNodeId && layout.nodes && layout.nodes[rootNodeId],
          customCSSText = rootNode && rootNode.attr && rootNode.attr.customCSS;
        if (customCSSText) {
          jQuery('<style id="customStyleCSS" type="text/css"></style>').appendTo('body').text(customCSSText);
        }
      };

      var container = jQuery('#container');
      container.on('mapjs:layout',function (evt) {
        var layout = evt.layout,
          element = $('#container'),
          stage = $('<div>').css({
            position: 'relative'
          }).attr('data-mapjs-role', 'stage').appendTo(element).data({
            'offsetX': element.innerWidth() / 2,
            'offsetY': element.innerHeight() / 2,
            'width': element.innerWidth(),
            'height': element.innerHeight(),
            'scale': 2
          }).updateStage(),
          fakeMapModel = observable({}),
          fakeImageController = observable({});
        MM.layoutStaticCustomStyle(layout);
        MAPJS.DOMRender.stageMargin = {top: 10, left: 10, bottom: 15, right: 15};
        MAPJS.DOMRender.fixedLayout = true;
        fakeMapModel.isEditingEnabled = function () { return false;}

        MAPJS.DOMRender.viewController(fakeMapModel, stage, false, fakeImageController);
        fakeMapModel.dispatchEvent('layoutChangeStarting');

        _.each(layout.nodes, function(node) { fakeMapModel.dispatchEvent('nodeCreated', node) });
        _.each(layout.connectors, function(connector) { fakeMapModel.dispatchEvent('connectorCreated', connector) });
        _.each(layout.links, function(link) { fakeMapModel.dispatchEvent('linkCreated', link) });
        stage.children().css({'opacity':1, 'display': ''});
        stage.detach();
        container.remove();
        stage.appendTo('body');
        });
  }
		</script>


  </body>
</html>
